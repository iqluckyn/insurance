package com.iql.policyadmin.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BusinessAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBusinessAllPropertiesEquals(Business expected, Business actual) {
        assertBusinessAutoGeneratedPropertiesEquals(expected, actual);
        assertBusinessAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBusinessAllUpdatablePropertiesEquals(Business expected, Business actual) {
        assertBusinessUpdatableFieldsEquals(expected, actual);
        assertBusinessUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBusinessAutoGeneratedPropertiesEquals(Business expected, Business actual) {
        assertThat(expected)
            .as("Verify Business auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBusinessUpdatableFieldsEquals(Business expected, Business actual) {
        assertThat(expected)
            .as("Verify Business relevant properties")
            .satisfies(e -> assertThat(e.getRegisteredName()).as("check registeredName").isEqualTo(actual.getRegisteredName()))
            .satisfies(e -> assertThat(e.getOrganisationName()).as("check organisationName").isEqualTo(actual.getOrganisationName()))
            .satisfies(e -> assertThat(e.getVatNumber()).as("check vatNumber").isEqualTo(actual.getVatNumber()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBusinessUpdatableRelationshipsEquals(Business expected, Business actual) {
        assertThat(expected)
            .as("Verify Business relationships")
            .satisfies(e -> assertThat(e.getBusinessType()).as("check businessType").isEqualTo(actual.getBusinessType()));
    }
}
